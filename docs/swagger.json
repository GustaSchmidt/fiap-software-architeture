{
  "swagger": "2.0",
  "info": {
    "title": "API Food Delivery",
    "description": "API para gerenciamento de clientes no sistema de delivery de comida.",
    "version": "1.0.0"
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Informe o token no formato: Bearer {seu_token}"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "Cliente",
      "description": "Operações relacionadas aos clientes"
    }
  ],
  "definitions": {
    "Client": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "example": 1 },
        "nome": { "type": "string", "example": "João" },
        "sobrenome": { "type": "string", "example": "Silva" },
        "email": { "type": "string", "format": "email", "example": "joao.silva@example.com" },
        "cpf": { "type": "string", "example": "404.562.410-43" },
        "senha": { "type": "string", "format": "md5", "example": "098f6bcd4621d373cade4e832627b4f6" }
      }
    }
  },
  "paths": {
    "/api/client/{id}": {
      "get": {
        "tags": ["Cliente"],
        "summary": "Buscar cliente por ID",
        "description": "Retorna os dados do cliente com o ID especificado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do cliente"
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado",
            "schema": { "$ref": "#/definitions/Client" }
          },
          "404": {
            "description": "Cliente não encontrado"
          }
        }
      }
    },
    "/api/client/search_cpf": {
      "post": {
        "tags": ["Cliente"],
        "summary": "Buscar cliente por CPF",
        "description": "Retorna os dados do cliente correspondente ao CPF informado.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["cpf"],
              "properties": {
                "cpf": {
                  "type": "string",
                  "example": "404.562.410-43"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado",
            "schema": { "$ref": "#/definitions/Client" }
          },
          "400": {
            "description": "CPF inválido"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/api/client/create": {
      "post": {
        "tags": ["Cliente"],
        "summary": "Criar novo cliente",
        "description": "Cria um novo cliente no sistema.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["nome", "sobrenome", "email", "cpf", "senha"],
              "properties": {
                "nome": { "type": "string", "example": "João" },
                "sobrenome": { "type": "string", "example": "Silva" },
                "email": { "type": "string", "format": "email", "example": "joao.silva@example.com" },
                "cpf": { "type": "string", "example": "404.562.410-43" },
                "senha": { "type": "string", "format": "md5", "example": "a8748f31d542005abb46c2e835215913" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "integer", "example": 1 },
                "message": { "type": "string", "example": "Cliente criado com sucesso" }
              }
            }
          },
          "400": {
            "description": "Erro de validação"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/api/client/update": {
      "post": {
        "tags": ["Cliente"],
        "summary": "Atualizar cliente",
        "description": "Atualiza as informações de um cliente existente.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": { "type": "integer", "example": 1 },
                "nome": { "type": "string", "example": "João" },
                "sobrenome": { "type": "string", "example": "Silva" },
                "email": { "type": "string", "format": "email", "example": "joao.silva@example.com" },
                "cpf": { "type": "string", "example": "404.562.410-43" },
                "senha": { "type": "string", "example": "098f6bcd4621d373cade4e832627b4f6" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente atualizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Cliente atualizado com sucesso" },
                "client": { "$ref": "#/definitions/Client" }
              }
            }
          },
          "400": { "description": "Erro de validação" },
          "404": { "description": "Cliente não encontrado" }
        }
      }
    },
    "/api/client/delete": {
      "delete": {
        "tags": ["Cliente"],
        "summary": "Deletar cliente",
        "description": "Remove um cliente do sistema com base no ID fornecido.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "ID do cliente a ser deletado"
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente deletado com sucesso"
          },
          "404": {
            "description": "Cliente não encontrado"
          }
        }
      }
    },
    "/api/loja/create": {
      "post": {
        "tags": ["Loja"],
        "summary": "Criar nova loja",
        "description": "Cria uma nova loja no sistema.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["nome", "endereco"],
              "properties": {
                "nome": { 
                  "type": "string", 
                  "example": "Loja Centro" 
                },
                "endereco": { 
                  "type": "string", 
                  "example": "Rua das Flores, 123" 
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Loja criada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "integer", "example": 1 },
                "message": { "type": "string", "example": "Loja criada com sucesso" }
              }
            }
          },
          "400": {
            "description": "Erro de validação"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/api/loja/search": {
      "post": {
        "tags": ["Loja"],
        "summary": "Buscar lojas",
        "description": "Busca lojas cadastradas com base no nome.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["nome"],
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "Centro"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de lojas encontradas",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer", "example": 1 },
                  "nome": { "type": "string", "example": "Loja Centro" },
                  "endereco": { "type": "string", "example": "Rua das Flores, 123" }
                }
              }
            }
          },
          "400": {
            "description": "Erro de validação"
          }
        }
      }
    },
    "/api/product/create": {
      "post": {
        "tags": ["Produto"],
        "summary": "Criar produto alimentício",
        "description": "Cria um produto alimentício em uma loja. Requer API Key da loja.",
        "security": [{ "ApiKeyAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["nome", "preco", "categoria", "ingredientes", "porcao", "informacoes_nutricionais", "loja_id"],
              "properties": {
                "nome": { "type": "string", "example": "Bolo de Cenoura" },
                "preco": { "type": "number", "example": 12.5 },
                "categoria": { "type": "string", "example": "Confeitaria" },
                "ingredientes": {
                  "type": "array",
                  "items": { "type": "string" },
                  "example": ["cenoura", "açúcar", "farinha de trigo", "ovos"]
                },
                "porcao": { "type": "string", "example": "100g" },
                "informacoes_nutricionais": {
                  "type": "object",
                  "properties": {
                    "calorias": { "type": "integer", "example": 250 },
                    "proteinas": { "type": "number", "example": 3.5 },
                    "gorduras": { "type": "number", "example": 8.0 },
                    "carboidratos": { "type": "number", "example": 35.0 }
                  }
                },
                "alergenicos": { "type": "string", "example": "Contém glúten e ovos" },
                "loja_id": { "type": "integer", "example": 1 }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Produto criado com sucesso" },
          "401": { "description": "Não autorizado" }
        }
      }
    },
    "/api/product/{id}": {
      "get": {
        "tags": ["Produto"],
        "summary": "Obter informações de um produto alimentício",
        "description": "Retorna os detalhes de um produto existente pelo ID. Requer API Key da loja.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID do produto",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "nome": {
                      "type": "string",
                      "example": "Bolo de Cenoura"
                    },
                    "preco": {
                      "type": "number",
                      "example": 12.5
                    },
                    "categoria": {
                      "type": "string",
                      "example": "Confeitaria"
                    },
                    "ingredientes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["cenoura", "açúcar", "farinha de trigo", "ovos"]
                    },
                    "porcao": {
                      "type": "string",
                      "example": "100g"
                    },
                    "informacoes_nutricionais": {
                      "type": "object",
                      "properties": {
                        "calorias": {
                          "type": "integer",
                          "example": 250
                        },
                        "proteinas": {
                          "type": "number",
                          "example": 3.5
                        },
                        "gorduras": {
                          "type": "number",
                          "example": 8.0
                        },
                        "carboidratos": {
                          "type": "number",
                          "example": 35.0
                        }
                      }
                    },
                    "alergenicos": {
                      "type": "string",
                      "example": "Contém glúten e ovos"
                    },
                    "loja_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Produto não encontrado"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/api/product/category_list": {
      "post": {
        "tags": ["Produto"],
        "summary": "Buscar produtos alimentícios",
        "description": "Busca produtos alimentícios por categoria em todo o app.",
        "parameters": [
          {
            "name": "categoria",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Categoria dos produtos para filtrar a busca"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos encontrados",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer", "example": 1 },
                  "nome": { "type": "string", "example": "Suco Natural" },
                  "preco": { "type": "number", "example": 6.5 },
                  "categoria": { "type": "string", "example": "Bebidas" },
                  "porcao": { "type": "string", "example": "300ml" }
                }
              }
            }
          },
          "401": { "description": "Não autorizado" }
        }
      }
    },
    "/api/product/update": {
      "post": {
        "tags": ["Produto"],
        "summary": "Atualizar produto alimentício",
        "description": "Atualiza os dados de um produto existente. Requer API Key da loja.",
        "security": [{ "ApiKeyAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["id", "nome", "preco", "categoria", "ingredientes", "porcao", "informacoes_nutricionais", "loja_id"],
              "properties": {
                "id": { "type": "integer", "example": 1 },
                "nome": { "type": "string", "example": "Bolo de Cenoura" },
                "preco": { "type": "number", "example": 12.5 },
                "categoria": { "type": "string", "example": "Confeitaria" },
                "ingredientes": {
                  "type": "array",
                  "items": { "type": "string" },
                  "example": ["cenoura", "açúcar", "farinha de trigo", "ovos"]
                },
                "porcao": { "type": "string", "example": "100g" },
                "informacoes_nutricionais": {
                  "type": "object",
                  "properties": {
                    "calorias": { "type": "integer", "example": 250 },
                    "proteinas": { "type": "number", "example": 3.5 },
                    "gorduras": { "type": "number", "example": 8.0 },
                    "carboidratos": { "type": "number", "example": 35.0 }
                  }
                },
                "alergenicos": { "type": "string", "example": "Contém glúten e ovos" },
                "loja_id": { "type": "integer", "example": 1 }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto atualizado com sucesso"
          },
          "404": {
            "description": "Produto não encontrado"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/api/product/delete": {
      "delete": {
        "tags": ["Produto"],
        "summary": "Deletar produto alimentício",
        "description": "Remove um produto alimentício da loja. Requer API Key da loja.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "ID do produto a ser deletado"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto deletado com sucesso"
          },
          "404": {
            "description": "Produto não encontrado"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/api/sacola/add": {
      "post": {
        "tags": ["Sacola"],
        "summary": "Adicionar item à sacola",
        "description": "Adiciona um item de uma loja à sacola do cliente.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["client_id", "produto_id", "quantidade"],
              "properties": {
                "client_id": { "type": "integer", "example": 1 },
                "produto_id": { "type": "integer", "example": 2 },
                "quantidade": { "type": "integer", "example": 1 }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Item adicionado com sucesso" },
          "400": { "description": "Erro de validação" }
        }
      }
    },
    "/api/sacola/remove": {
      "post": {
        "tags": ["Sacola"],
        "summary": "Remover item da sacola",
        "description": "Remove um item específico da sacola.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["client_id", "produto_id"],
              "properties": {
                "client_id": { "type": "integer", "example": 1 },
                "produto_id": { "type": "integer", "example": 2 }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Item removido com sucesso" },
          "404": { "description": "Item não encontrado" }
        }
      }
    },
    "/api/sacola/checkout": {
      "post": {
        "tags": ["Sacola"],
        "summary": "Finalizar sacola (checkout)",
        "description": "Finaliza a sacola e gera um link de pagamento.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["client_id"],
              "properties": {
                "client_id": { "type": "integer", "example": 1 }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "pedido_id": { "type": "integer", "example": 123 },
                "link_pagamento": { "type": "string", "example": "https://pagamento.com/pedido/123" }
              }
            }
          }
        }
      }
    },
    "/api/sacola/client/{clientId}": {
        "get": {
          "tags": ["Sacola"],
          "summary": "Lista as sacolas de um cliente",
          "description": "Retorna todas as sacolas associadas ao cliente especificado por ID.",
          "parameters": [
            {
              "name": "clientId",
              "in": "path",
              "required": true,
              "description": "ID do cliente",
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de sacolas retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Sacola"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Cliente não encontrado"
            }
          }
        }
      },
    "/api/pedido/list": {
      "post": {
        "tags": ["Pedido"],
        "summary": "Listar pedidos de uma loja",
        "description": "Lista todos os pedidos de uma loja, com opção de filtro por status.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["loja_id"],
              "properties": {
                "loja_id": { "type": "integer", "example": 5 },
                "status": {
                  "type": "string",
                  "example": "pendente",
                  "enum": ["pendente", "pago", "cancelado", "em_preparacao", "entregue"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pedidos",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pedido_id": { "type": "integer", "example": 123 },
                  "cliente": { "type": "string", "example": "João" },
                  "status": { "type": "string", "example": "pago" },
                  "valor_total": { "type": "number", "example": 45.90 }
                }
              }
            }
          }
        }
      }
    },
    "/api/pedido/status": {
      "get": {
        "tags": ["Pedido"],
        "summary": "Consultar status de um pedido",
        "description": "Consulta o status atual de um pedido.",
        "parameters": [
          {
            "name": "pedido_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Status do pedido",
            "schema": {
              "type": "object",
              "properties": {
                "pedido_id": { "type": "integer", "example": 123 },
                "status": { "type": "string", "example": "em_preparacao" }
              }
            }
          },
          "404": { "description": "Pedido não encontrado" }
        }
      },
      "post": {
        "tags": ["Pedido"],
        "summary": "Atualizar status de um pedido",
        "description": "Atualiza o status de um pedido existente.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["pedido_id", "status"],
              "properties": {
                "pedido_id": { "type": "integer", "example": 123 },
                "status": {
                  "type": "string",
                  "example": "em_preparacao",
                  "enum": ["pendente", "pago", "cancelado", "em_preparacao", "entregue"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Status atualizado com sucesso" },
          "404": { "description": "Pedido não encontrado" }
        }
      }
    }
  }
}